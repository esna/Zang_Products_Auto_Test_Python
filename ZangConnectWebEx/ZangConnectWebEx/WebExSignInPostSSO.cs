///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ZangConnectWebEx
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WebExSignInPostSSO recording.
    /// </summary>
    [TestModule("17c82bf0-ebb2-48e4-96e2-c59e268245d4", ModuleType.Recording, 1)]
    public partial class WebExSignInPostSSO : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ZangConnectWebExRepository repository.
        /// </summary>
        public static ZangConnectWebExRepository repo = ZangConnectWebExRepository.Instance;

        static WebExSignInPostSSO instance = new WebExSignInPostSSO();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WebExSignInPostSSO()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WebExSignInPostSSO Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ZangConnect' at 1009;307.", repo.ZangConnect.SelfInfo, new RecordItemIndex(0));
            repo.ZangConnect.Self.Click("1009;307");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Zang123!'.", new RecordItemIndex(1));
            Keyboard.Press("Zang123!");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ZangConnect' at 1213;401.", repo.ZangConnect.SelfInfo, new RecordItemIndex(2));
            repo.ZangConnect.Self.Click("1213;401");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move at {X=0,Y=0}.", new RecordItemIndex(3));
            Mouse.MoveTo(0, 0);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 8s.", new RecordItemIndex(4));
            Delay.Duration(8000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=656,Y=145,Width=163,Height=46}) on item 'ZangConnect.ZangConnect'.", repo.ZangConnect.ZangConnectInfo, new RecordItemIndex(5));
            Validate.ContainsImage(repo.ZangConnect.ZangConnectInfo, ZangConnect_Screenshot2, ZangConnect_Screenshot2_Options);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage ZangConnect_Screenshot2
        { get { return repo.ZangConnect.ZangConnectInfo.GetScreenshot2(new Rectangle(656, 145, 163, 46)); } }

        Imaging.FindOptions ZangConnect_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
